---
import Layout from '@/layouts/Layout.astro'
import { getMoviesPaths } from '@/lib/getMoviesPaths.js'
import { IMAGES_PATH } from '@/services/consts/const-imagesPath'
import { getAllMovies } from '@/lib/allMovies.js'
import { requestsFilms } from '@/services/requests/requests-films'
import { credits } from '@/lib/endpoints'
import { similarMovies } from '@/lib/endpoints'
import TrailerYoutube from '@/components/TrailerYoutube.astro'
import DatesFilm from '@/components/DatesFilm.astro'
import Cast from '@/components/Cast.astro'
import SimilarsMovies from '@/sections/movies/SimilarsMovies.astro'
import { genresMovies } from '@/lib/endpoints'
import { generateCleanTitle } from '@/utils/generateCleanTitle'

const { dinamicMovie } = Astro.params

export const getStaticPaths = async () => {
  return await getMoviesPaths()
}

const movies = await getAllMovies()
const movie = movies.find((movie) => generateCleanTitle(movie.title) === dinamicMovie)

// Obtener la información de la película desde el id dinámico
const creditsMovie = await requestsFilms(credits(movie.id))
const similarMovie = await requestsFilms(similarMovies(movie.id))
const genresIds = movie.genre_ids

const genres = await requestsFilms(genresMovies)

const genresNames = genres.genres
  .filter((genre) => genresIds.includes(genre.id))
  .map((genre) => genre.name)
  .join(', ')
---

<Layout
  title={`Cine info - ${movie.title}`}
  description={movie.overview}
  showHeader={true}
  showFooter={true}
>
  <main class="relative bg-[url(/Background_cine.webp)] px-2 py-10 pt-24 md:px-18">
    <div class="bg-dark-secondary/95 absolute inset-0 h-full w-full shadow-2xl"></div>
    <article class="relative p-2 md:p-4">
      <div class="bg-dark-secondary/75 absolute inset-0 rounded-lg"></div>
      <section class="flex flex-col gap-10 md:flex-row">
        <img
          src={`${IMAGES_PATH}${movie.backdrop_path}`}
          alt={movie.title}
          class="mask-fade-image-film animate-fade-in-down aspect-video h-auto w-full rounded-lg md:w-[50%]"
        />

        <DatesFilm movie={movie} genres={genresNames} credits={creditsMovie} />
      </section>

      <div class="mx-auto mt-8 w-full overflow-hidden md:mt-16 md:w-[60%]">
        {
          movie.id === undefined || movie.id === null ? (
            <p>Trailer no disponible en ésta película</p>
          ) : (
            <TrailerYoutube videoId={movie.id} trailerTitle={movie.title} />
          )
        }
      </div>

      <SimilarsMovies similars={similarMovie} />

      <Cast credits={creditsMovie} />
    </article>
  </main>

  <script>
    import { dinamicPagesMovies } from '@/utils/dinamicPagesMovies'

    dinamicPagesMovies()

    window.addEventListener('popstate', () => {
      window.location.reload()
    })
  </script>
</Layout>
