---
import { IMAGES_PATH } from '@/services/consts/const-imagesPath'
import ArrowLeft from '@/assets/svg/ArrowLeft.svg'
import ArrowRight from '@/assets/svg/ArrowRight.svg'

const { similars } = Astro.props
---

<article class="relative mt-20 flex w-full flex-col items-center gap-4">
  <h4 class="mb-10 text-5xl font-bold text-white">Películas similares</h4>
  <div class="container-arrows flex items-center gap-6">
    <button class="button-left"
      ><ArrowLeft
        class="arrow-left cursor-pointer text-gray-600 transition-all hover:scale-105 hover:text-gray-500"
        aria-label="Flecha hacia la izquierda"
      /></button
    >
    <button class="button-right"
      ><ArrowRight
        class="arrow-right cursor-pointer text-gray-600 transition-all hover:scale-105 hover:text-gray-500"
        aria-label="Flecha hacia la derecha"
      /></button
    >
  </div>
  <div
    class="similar-movies flex w-full snap-x snap-mandatory justify-start gap-4 overflow-x-scroll scroll-smooth px-4 py-4"
  >
    {
      similars.results.map((similar) => {
        return (
          <div
            class="group contenedor relative h-[23rem] w-[18rem] min-w-[18rem] overflow-hidden rounded-lg border border-transparent shadow-md transition-all duration-300 focus-within:border focus-within:border-zinc-400 hover:border hover:border-zinc-400"
            tabindex="0"
          >
            <img
              src={`${IMAGES_PATH}${similar.poster_path}`}
              alt={similar.title}
              class="contenedor animate-fade-in animate-duration-300 group-hover:mask-fade-name absolute inset-0 h-full w-full rounded-lg transition-all duration-300 group-focus-within:scale-95 group-hover:scale-95"
              loading="lazy"
              fetchpriority="low"
              decoding="async"
            />
            <div class="pointer-events-none absolute bottom-2 left-1.5 opacity-0 transition-all group-focus-within:pointer-events-auto group-focus-within:opacity-100 group-hover:pointer-events-auto group-hover:opacity-100">
              <span class="text-shadow mb-0.5 block text-xl font-bold text-pretty text-white">
                {similar.title}
              </span>
              <a
                class="pointer-events-auto inline-block cursor-pointer rounded-lg border-2 border-transparent bg-gray-500/50 px-4 py-2 text-white transition-all duration-100 hover:scale-105 hover:border-white hover:bg-gray-600/50 focus:scale-105 focus:border-white focus:bg-gray-600/50"
                href={`/${similar.title}`}
                tabindex="0"
                aria-label={`Ver más sobre ${similar.title}`}
              >
                Ver más
              </a>
            </div>
          </div>
        )
      })
    }
  </div>
</article>

<style>
  .similar-movies::-webkit-scrollbar {
    appearance: none;
  }
  .similar-movies::-webkit-scrollbar:horizontal {
    height: 9px;
  }
  .similar-movies::-webkit-scrollbar:vertical {
    width: 4px;
  }
  .similar-movies::-webkit-scrollbar-thumb {
    background-color: #4b5563;
    border-radius: 20px;
  }
  .similar-movies::-webkit-scrollbar-track {
    background-color: #1f2937;
    border-radius: 10px;
  }
  .similar-movies::-webkit-scrollbar-button:increment,
  .similar-movies::-webkit-scrollbar-button {
    display: none;
  }
</style>

<script is:inline>
  const containerMovies = document.querySelector('.similar-movies') // Contenedor de películas similares
  const arrowLeft = document.querySelector('.arrow-left') // Flecha izquierda
  const arrowRight = document.querySelector('.arrow-right') // Flecha derecha
  const buttonLeft = document.querySelector('.button-left') // Botón flecha izquierda
  const buttonRight = document.querySelector('.button-right') // Botón flecha derecha

  arrowRight.addEventListener('click', () => {
    const scrollAmount = (containerMovies.scrollWidth / containerMovies.children.length) * 2.8
    containerMovies.scrollBy({
      left: scrollAmount,
      behavior: 'smooth'
    })
  })

  arrowLeft.addEventListener('click', () => {
    const scrollAmount = (containerMovies.scrollWidth / containerMovies.children.length) * 2.8
    containerMovies.scrollBy({
      left: -scrollAmount,
      behavior: 'smooth'
    })
  })

  // Accecibilidad de flechas
  buttonLeft.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowLeft') {
      const scrollAmount = (containerMovies.scrollWidth / containerMovies.children.length) * 2.8
      containerMovies.scrollBy({
        left: -scrollAmount,
        behavior: 'smooth'
      })
    }
  })

  buttonRight.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' || e.key === ' ' || e.key === 'ArrowRight') {
      const scrollAmount = (containerMovies.scrollWidth / containerMovies.children.length) * 2.8
      containerMovies.scrollBy({
        left: scrollAmount,
        behavior: 'smooth'
      })
    }
  })
</script>
